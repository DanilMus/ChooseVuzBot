from aiogram import types, Dispatcher
from aiogram.dispatcher.storage import FSMContext

async def about(message: types.Message, state: FSMContext):
    await state.finish()

    await message.answer(
        '<b>/Как составляется рейтинг/</b>\n'
        "Все познается в сравнении, тот же принцип используется "
        "и в составлении рейтинга "
        "В начале берутся полученые характеристики ВУЗов, создаются средние значения "
        "по каждой характеристике для всех ВУЗов в рейтинге. "
        "И дальше смотрится, если у характеристики, чем больше ее значение, тем лучше, как, "
        "например, у количества факультетов, то эта характеристика делиться на среднее значение этой характеристи и умножается на "
        "оценку критерия, которую ты дал. "
        "Если же, наоборот, чем меньше значение характеристики, тем лучше, как, например, количество студентов на одного учителя, то "
        "среднее значение делится на значение характеристики и снова умножается на оценку критерия. "
        "С первого раза понять это тяжело. "
    )
    await message.answer(
        "<b>!Вот главная мысль из этого!</b>\n"
        "Баллы набранные ВУЗом имеют значение только в полученном рейтинге. "
        "Т.е. переходя от рейтинга к рейтингу баллы ВУЗа будут меняться. "
        "Баллы набранные ВУЗом важны лишь для сравнения насколько одни ВУЗ лучше другого."
    )
    await message.answer(
        "Больше информации в телеграмм канале => @ChooseVuz"
    )


async def register_about(dp: Dispatcher):
    dp.register_message_handler(about, commands= 'about', state= '*')